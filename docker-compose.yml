version: '3'
services: 
  auth_db:
    image: 'postgres:latest'
    container_name: 'wishlist_demo_auth_db'
    environment:
      POSTGRES_USER: ${AUTH_DB_USERNAME}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_DATABASE}
    ports:
      - '54321:5432'
    networks:
      - auth_db

  auth_service:
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    image: 'wishlist_demo_auth'
    container_name: 'wishlist_demo_auth'
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    restart: unless-stopped
    # env_file: ./authentication-service/.env
    environment:
      PORT: ${AUTH_PORT}
      PG_URL: auth_db
      PG_USER: ${AUTH_DB_USERNAME}
      PG_PASSWORD: ${AUTH_DB_PASSWORD}
      PG_DATABASE: ${AUTH_DB_DATABASE}
      PG_PORT: ${AUTH_DB_DATABASE_PORT}
      DB_SYNC: ${AUTH_DB_SYNC}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    depends_on:
      - auth_db
    networks:
      app:
        aliases: 
          - auth_service
      auth_db:

  app_db:
    image: 'postgres:latest'
    container_name: 'wishlist_demo_app_db'
    environment:
      POSTGRES_USER: ${APP_DB_USERNAME}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_DB: ${APP_DB_DATABASE}
    ports:
      - '54320:5432'
    networks:
      - app_db

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: 'wishlist_demo_app'
    container_name: 'wishlist_demo_app'
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: unless-stopped
    # env_file: ./backend/.env
    environment:
      PORT: ${APP_PORT}
      PG_URL: app_db
      PG_USER: ${APP_DB_USERNAME}
      PG_PASSWORD: ${APP_DB_PASSWORD}
      PG_DATABASE: ${APP_DB_DATABASE}
      PG_PORT: ${APP_DB_DATABASE_PORT}
      DB_SYNC: ${AUTH_DB_SYNC}
      AUTH_URL: http://auth_service:${AUTH_PORT}
    depends_on:
      - app_db
      - auth_service
    networks:
      - app
      - app_db



networks: 
  app_db:
    driver: bridge
  auth_db:
    driver: bridge
  app:
    driver: bridge

volumes:
  .:
  node_modules: